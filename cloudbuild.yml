# This workflow will build and push a new container image to GCP GKE
#
# To use this workflow, you will need to complete the following set-up steps:
#
# 1. Create an Artifact Registry Docker repository to store your images.
#    For example: gcloud artifacts repositories create cjot-stocktrader-pipeline1-repository \
#  --repository-format=docker \
#  --location=us-central1
#    Replace the value of `GCP_REPOSITORY` in the workflow below with your repository's name.
#    Replace the value of `gcp-region` in the workflow below with your repository's region.
#
# 2. Create a Cloud Build Trigger to launch the CI process.
#
# 3. Store your ECS task definition as a JSON file in your repository. ???
#

steps:
# Specify the entrypoint for the maven image; print the build tool version
  - name: maven:3-jdk-8
    entrypoint: mvn
    args: ['--version']

# Run test
  - name: maven:3-jdk-8
    entrypoint: mvn
    args: ['test']

# Package application
  - name: maven:3-jdk-8
    entrypoint: mvn
    args: ['package','-Dmaven.test.skip=true','-Dmaven.test.skip=true']

# Build a docker container and push it to GCP repository
  - name: 'gcr.io/cloud-builders/docker'
    id: Build
#    args: [ 'build', '-t', 'us-west1-docker.pkg.dev/cloud-engagement-hub/cjot-stocktrader-repo/broker:test', '.' ]
    args: [ 'build', '-t', 'us-west1-docker.pkg.dev/cloud-engagement-hub/cjot-stocktrader-repo/broker:$SHORT_SHA', '.' ]
images:
#- 'us-west1-docker.pkg.dev/cloud-engagement-hub/cjot-stocktrader-repo/broker:test'
  - 'us-west1-docker.pkg.dev/cloud-engagement-hub/cjot-stocktrader-repo/broker:$SHORT_SHA'
timeout: 3600s

# [START cloudbuild-trigger-cd]
# This step clones the stocktrader-broker-st-pipeline1-env repository
  - name: 'gcr.io/cloud-builders/gcloud'
    id: Clone env repository
    entrypoint: /bin/sh
    args:
    - '-c'
    - |
      gcloud source repos clone stocktrader-broker-st-pipeline1-env && \
      cd stocktrader-broker-st-pipeline1-env && \
      git checkout candidate && \
      git config user.email $(gcloud auth list --filter=status:ACTIVE --format='value(account)')
# This step generates the new manifest
  - name: 'gcr.io/cloud-builders/gcloud'
    id: Generate manifest
    entrypoint: /bin/sh
    args:
    - '-c'
    - |
      sed "s/GOOGLE_CLOUD_PROJECT/${PROJECT_ID}/g" stocktrader-instance-cloudsql-ssl-gcr-rediss-kafka-1.yaml.tpl | \
      sed "s/COMMIT_SHA/${SHORT_SHA}/g" > stocktrader-broker-st-pipeline1-env/stocktrader-instance-cloudsql-ssl-gcr-rediss-kafka-1.yaml
# This step pushes the manifest back to stocktrader-broker-st-pipeline1-env
  - name: 'gcr.io/cloud-builders/gcloud'
    id: Push manifest
    entrypoint: /bin/sh
    args:
    - '-c'
    - |
    set -x && \
    cd stocktrader-broker-st-pipeline1-env && \
    git add stocktrader-instance-cloudsql-ssl-gcr-rediss-kafka-1.yaml && \
    git commit -m "Deploying image us-central1-docker.pkg.dev/$PROJECT_ID/my-repository/stocktrader-broker-st-pipeline1:${SHORT_SHA}
    Built from commit ${COMMIT_SHA} of repository stocktrader-broker-st-pipeline1-app
    Author: $(git log --format='%an <%ae>' -n 1 HEAD)" && \
    git push origin candidate
# [END cloudbuild-trigger-cd]
